{
  "version": 3,
  "sources": ["render-app.ts"],
  "sourcesContent": ["import * as esbuild from \"esbuild\"\nimport * as fs from \"fs/promises\"\nimport * as path from \"path\"\nimport * as types from \"./types\"\n\nasync function run(runtime: types.Runtime): Promise<void> {\n\tconst srvRouterPath = path.join(runtime.directoryConfiguration.cacheDir, \"cachedServerRouter.json\")\n\tconst srvRouter: types.ServerRouter = require(\"../\" + srvRouterPath)\n\n\t// Get a set of component keys:\n\tconst compKeys = [...new Set(Object.keys(srvRouter).map(keys => srvRouter[keys]!.filesystemRoute.component))]\n\n\t// Create a shared server router based on shared component keys:\n\tconst sharedSrvRouter: types.ServerRouter = {}\n\n\t// prettier-ignore\n\tfor (const [, meta] of Object.entries(srvRouter)) {\n\t\tconst comp = meta.filesystemRoute.component\n\t\tif (compKeys.includes(comp) &&\n\t\t\t\tsharedSrvRouter[comp] === undefined) {\n\t\t\tsharedSrvRouter[comp] = meta\n\t\t}\n\t}\n\n\tconst cachePath = path.join(runtime.directoryConfiguration.cacheDir, \"app.js\")\n\tconst exportPath = path.join(runtime.directoryConfiguration.exportDir, \"app.js\")\n\n\tconst data = `import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Route, Router } from \"../router\"\n\n// Shared components\n${Object.entries(sharedSrvRouter)\n\t.map(([, { filesystemRoute }]) => `import ${filesystemRoute.component} from \"../${filesystemRoute.inputPath}\"`)\n\t.join(\"\\n\")}\n\nimport srvRouter from \"./cachedServerRouter.json\"\n\nexport default function App() {\n\treturn (\n\t\t<Router>\n${\n\tObject.entries(srvRouter)\n\t\t.map(\n\t\t\t([path_, meta]) => `\n\t\t\t<Route path=\"${path_}\">\n\t\t\t\t<${meta.filesystemRoute.component} {...{\n\t\t\t\t\tpath: \"${path_}\",\n\t\t\t\t\t...srvRouter[\"${path_}\"].serverProps,\n\t\t\t\t}} />\n\t\t\t</Route>`,\n\t\t)\n\t\t.join(\"\\n\") + \"\\n\"\n}\n\t\t</Router>\n\t)\n}\n\nReactDOM.hydrate(\n\t// <React.StrictMode> // TODO\n\t<App />,\n\t// </React.StrictMode>\n\tdocument.getElementById(\"root\"),\n)\n`\n\tawait fs.writeFile(cachePath, data)\n\n\tawait esbuild.build({\n\t\tbundle: true,\n\t\tdefine: {\n\t\t\t__DEV__: \"true\", // TODO\n\t\t\t\"process.env.NODE_ENV\": JSON.stringify(\"development\"), // TODO\n\t\t},\n\t\tentryPoints: [cachePath],\n\t\t// format: \"cjs\",\n\t\tloader: {\n\t\t\t\".js\": \"jsx\",\n\t\t},\n\t\tlogLevel: \"silent\", // TODO\n\t\toutfile: exportPath,\n\t\t// plugins: [...configs.retro.plugins],\n\t})\n}\n\n;(async () => {\n\ttry {\n\t\tawait run(require(\"../__cache__/runtime.json\"))\n\t} catch (error) {\n\t\tconsole.error(error.stack)\n\t}\n})()\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA,cAAyB;AACzB,SAAoB;AACpB,WAAsB;AAGtB,mBAAmB;AAClB,QAAM,gBAAgB,KAAK,KAAK,QAAQ,uBAAuB,UAAU;AACzE,QAAM,YAAgC,QAAQ,QAAQ;AAGtD,QAAM,WAAW,CAAC,GAAG,IAAI,IAAI,OAAO,KAAK,WAAW,IAAI,UAAQ,UAAU,MAAO,gBAAgB;AAGjG,QAAM,kBAAsC;AAG5C,aAAW,CAAC,EAAE,SAAS,OAAO,QAAQ;AACrC,UAAM,OAAO,KAAK,gBAAgB;AAClC,QAAI,SAAS,SAAS,SACpB,gBAAgB,UAAU;AAC3B,sBAAgB,QAAQ;AAAA;AAAA;AAI1B,QAAM,YAAY,KAAK,KAAK,QAAQ,uBAAuB,UAAU;AACrE,QAAM,aAAa,KAAK,KAAK,QAAQ,uBAAuB,WAAW;AAEvE,QAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAKZ,OAAO,QAAQ,iBACf,IAAI,CAAC,CAAC,EAAE,CAAE,sBAAuB,UAAU,gBAAgB,sBAAsB,gBAAgB,cACjG,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQN,OAAO,QAAQ,WACb,IACA,CAAC,CAAC,OAAO,UAAU;AAAA,kBACJ;AAAA,OACX,KAAK,gBAAgB;AAAA,cACd;AAAA,qBACO;AAAA;AAAA,cAIlB,KAAK,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaf,QAAM,GAAG,UAAU,WAAW;AAE9B,QAAM,QAAQ,MAAM;AAAA,IACnB,QAAQ;AAAA,IACR,QAAQ;AAAA,MACP,SAAS;AAAA,MACT,wBAAwB,KAAK,UAAU;AAAA;AAAA,IAExC,aAAa,CAAC;AAAA,IAEd,QAAQ;AAAA,MACP,OAAO;AAAA;AAAA,IAER,UAAU;AAAA,IACV,SAAS;AAAA;AAAA;AAKX;AAAC,AAAC;AACD;AACC,UAAM,IAAI,QAAQ;AAAA,WACV;AACR,YAAQ,MAAM,MAAM;AAAA;AAAA;",
  "names": []
}
