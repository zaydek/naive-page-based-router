{
  "version": 3,
  "sources": ["render-pages.ts"],
  "sourcesContent": ["import * as esbuild from \"esbuild\"\nimport * as fs from \"fs/promises\"\nimport * as path from \"path\"\nimport * as React from \"react\"\nimport * as ReactDOMServer from \"react-dom/server\"\nimport * as types from \"./types\"\n\n// RenderPayload describes a render payload (page metadata).\n//\n// prettier-ignore\ninterface RenderPayload {\n\toutputPath:   string\n\tpath:         string\n\tmodule:       types.StaticPageModule | types.DynamicPageModule\n\tserverProps?: types.ServerProps\n}\n\nconst cachedServerRouter: types.ServerRouter = {}\n\n// \"/\" -> \"/index.html\"\n// \"/nested/\" -> \"/nested/index.html\"\nfunction pathToHTML(path: string): string {\n\tif (!path.endsWith(\"/\")) return path + \".html\"\n\treturn path + \"index.html\"\n}\n\n// renderToDisk renders a render payload to disk.\nasync function renderToDisk(runtime: types.Runtime, render: RenderPayload): void {\n\tlet head = \"<!-- <Head {...props}> -->\"\n\tif (typeof render.module.Head === \"function\") {\n\t\thead = ReactDOMServer.renderToStaticMarkup(React.createElement(render.module.Head, render.serverProps))\n\t}\n\n\tlet page = \"<!-- <Page {...props}> -->\"\n\tif (typeof render.module.default === \"function\") {\n\t\tpage = ReactDOMServer.renderToString(React.createElement(render.module.default, render.serverProps))\n\t}\n\n\t// prettier-ignore\n\thead = head\n\t\t.replace(/></g, \">\\n\\t\\t<\")\n\t\t.replace(/\\/>/g, \" />\")\n\n\tpage = `<noscript>You need to enable JavaScript to run this app.</noscript>\n\t\t<div id=\"root\">${page}</div>\n\t\t<script src=\"/app.js\"></script>`\n\n\t// prettier-ignore\n\tconst html = runtime.baseHTML\n\t\t.replace(\"%head%\", head)\n\t\t.replace(\"%page%\", page)\n\n\tawait fs.mkdir(path.dirname(render.outputPath), { recursive: true })\n\tawait fs.writeFile(render.outputPath, html)\n}\n\nasync function run(runtime: types.Runtime): Promise<void> {\n\tconst service = await esbuild.startService()\n\n\t// TODO: Upgrade to Promise.all (add --concurrent?).\n\tfor (const filesystemRoute of runtime.filesystemRouter) {\n\t\t// Generate paths for esbuild:\n\t\tconst entryPoints = [filesystemRoute.inputPath]\n\t\tconst outfile = path.join(\n\t\t\truntime.directoryConfiguration.cacheDir,\n\t\t\tentryPoints[0]!.replace(/\\.(jsx?|tsx?)$/, \".esbuild.$1\"),\n\t\t)\n\n\t\tawait service.build({\n\t\t\tbundle: true,\n\t\t\tdefine: {\n\t\t\t\t__DEV__: \"true\",\n\t\t\t\t\"process.env.NODE_ENV\": JSON.stringify(\"development\"),\n\t\t\t},\n\t\t\tentryPoints,\n\t\t\t// NOTE: Use \"external\" to prevent a React error: You might have\n\t\t\t// mismatching versions of React and the renderer (such as React DOM).\n\t\t\texternal: [\"react\", \"react-dom\"],\n\t\t\tformat: \"cjs\",\n\t\t\tloader: {\n\t\t\t\t\".js\": \"jsx\",\n\t\t\t},\n\t\t\tlogLevel: \"silent\", // TODO\n\t\t\toutfile,\n\t\t\t// plugins: [...configs.retro.plugins], // TODO\n\t\t})\n\t\t// TODO: Handle warnings and hints.\n\n\t\tconst mod = require(\"../\" + outfile)\n\n\t\t// TODO: Add cache check here.\n\t\t// TODO: Add cache serverProps here.\n\n\t\tlet serverProps: types.ServerProps\n\t\tif (typeof exports.serverProps === \"function\") {\n\t\t\tserverProps = await exports.serverProps()\n\t\t\tserverProps = {\n\t\t\t\tpath: filesystemRoute.path, // Add path\n\t\t\t\t...serverProps,\n\t\t\t}\n\t\t}\n\n\t\tif (typeof exports.serverPaths === \"function\") {\n\t\t\tconst descriptServerPaths: types.DescriptiveServerPaths = await exports.serverPaths(serverProps)\n\t\t\tconst serverRouter = descriptServerPaths.reduce<types.ServerRouter>((accum, serverProps) => {\n\t\t\t\taccum[filesystemRoute.path] = {\n\t\t\t\t\tfilesystemRoute,\n\t\t\t\t\tserverProps,\n\t\t\t\t}\n\t\t\t\treturn accum\n\t\t\t}, {})\n\n\t\t\t// if (serverRouter !== undefined) {\n\t\t\tfor (const [path_, meta] of Object.entries(serverRouter)) {\n\t\t\t\t// TODO: Warn here for repeat paths.\n\t\t\t\tcachedServerRouter[path_] = meta\n\t\t\t}\n\t\t\t// }\n\n\t\t\tfor (const [path_, meta] of Object.entries(serverRouter)) {\n\t\t\t\tconst render: RenderPayload = {\n\t\t\t\t\toutputPath: path.join(runtime.directoryConfiguration.exportDir, pathToHTML(path_)),\n\t\t\t\t\tpath: path_,\n\t\t\t\t\tmodule: mod,\n\t\t\t\t\tserverProps: meta.serverProps,\n\t\t\t\t}\n\t\t\t\t// TODO: What the hell?\n\t\t\t\tawait renderToDisk(runtime, render)\n\t\t\t}\n\t\t\tcontinue\n\t\t}\n\n\t\t// TODO: Warn here for repeat paths.\n\t\tconst path_ = filesystemRoute.path\n\t\tconst render: RenderPayload = {\n\t\t\toutputPath: path.join(runtime.directoryConfiguration.exportDir, pathToHTML(path_)),\n\t\t\tpath: path_,\n\t\t\tmodule: mod,\n\t\t\tserverProps: serverProps,\n\t\t}\n\t\t// TODO: What the hell?\n\t\tawait renderToDisk(runtime, render)\n\t}\n\n\t// Cache cachedServerRouter for --cached:\n\tconst cachedServerRouterPath = path.join(runtime.directoryConfiguration.cacheDir, \"serverRouter.json\")\n\tconst data = JSON.stringify(cachedServerRouter, null, \"\\t\") + \"\\n\" // EOF\n\tawait fs.writeFile(cachedServerRouterPath, data)\n}\n\n;(async () => {\n\ttry {\n\t\tawait run(require(\"../__cache__/runtime.json\"))\n\t} catch (error) {\n\t\tconsole.error(error.stack)\n\t\t// console.error({\n\t\t// \tstack: error.stack,\n\t\t// \terrno: error.errno,\n\t\t// \tcode: error.code,\n\t\t// \tsyscall: error.syscall,\n\t\t// \tpath: error.path,\n\t\t// })\n\t}\n})()\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA,cAAyB;AACzB,SAAoB;AACpB,WAAsB;AACtB,YAAuB;AACvB,qBAAgC;AAahC,MAAM,qBAAyC;AAI/C,oBAAoB;AACnB,MAAI,CAAC,MAAK,SAAS;AAAM,WAAO,QAAO;AACvC,SAAO,QAAO;AAAA;AAIf,4BAA4B,SAAwB;AACnD,MAAI,OAAO;AACX,MAAI,OAAO,OAAO,OAAO,SAAS;AACjC,WAAO,eAAe,qBAAqB,MAAM,cAAc,OAAO,OAAO,MAAM,OAAO;AAAA;AAG3F,MAAI,OAAO;AACX,MAAI,OAAO,OAAO,OAAO,YAAY;AACpC,WAAO,eAAe,eAAe,MAAM,cAAc,OAAO,OAAO,SAAS,OAAO;AAAA;AAIxF,SAAO,KACL,QAAQ,OAAO,UACf,QAAQ,QAAQ;AAElB,SAAO;AAAA,mBACW;AAAA;AAIlB,QAAM,OAAO,QAAQ,SACnB,QAAQ,UAAU,MAClB,QAAQ,UAAU;AAEpB,QAAM,GAAG,MAAM,KAAK,QAAQ,OAAO,aAAa,CAAE,WAAW;AAC7D,QAAM,GAAG,UAAU,OAAO,YAAY;AAAA;AAGvC,mBAAmB;AAClB,QAAM,UAAU,MAAM,QAAQ;AAG9B,aAAW,mBAAmB,QAAQ;AAErC,UAAM,cAAc,CAAC,gBAAgB;AACrC,UAAM,UAAU,KAAK,KACpB,QAAQ,uBAAuB,UAC/B,YAAY,GAAI,QAAQ,kBAAkB;AAG3C,UAAM,QAAQ,MAAM;AAAA,MACnB,QAAQ;AAAA,MACR,QAAQ;AAAA,QACP,SAAS;AAAA,QACT,wBAAwB,KAAK,UAAU;AAAA;AAAA,MAExC;AAAA,MAGA,UAAU,CAAC,SAAS;AAAA,MACpB,QAAQ;AAAA,MACR,QAAQ;AAAA,QACP,OAAO;AAAA;AAAA,MAER,UAAU;AAAA,MACV;AAAA;AAKD,UAAM,MAAM,QAAQ,QAAQ;AAK5B,QAAI;AACJ,QAAI,OAAO,QAAQ,gBAAgB;AAClC,oBAAc,MAAM,QAAQ;AAC5B,oBAAc;AAAA,QACb,MAAM,gBAAgB;AAAA,WACnB;AAAA;AAAA;AAIL,QAAI,OAAO,QAAQ,gBAAgB;AAClC,YAAM,sBAAoD,MAAM,QAAQ,YAAY;AACpF,YAAM,eAAe,oBAAoB,OAA2B,CAAC,OAAO;AAC3E,cAAM,gBAAgB,QAAQ;AAAA,UAC7B;AAAA,UACA;AAAA;AAED,eAAO;AAAA,SACL;AAGH,iBAAW,CAAC,QAAO,SAAS,OAAO,QAAQ;AAE1C,2BAAmB,UAAS;AAAA;AAI7B,iBAAW,CAAC,QAAO,SAAS,OAAO,QAAQ;AAC1C,cAAM,UAAwB;AAAA,UAC7B,YAAY,KAAK,KAAK,QAAQ,uBAAuB,WAAW,WAAW;AAAA,UAC3E,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,aAAa,KAAK;AAAA;AAGnB,cAAM,aAAa,SAAS;AAAA;AAE7B;AAAA;AAID,UAAM,QAAQ,gBAAgB;AAC9B,UAAM,SAAwB;AAAA,MAC7B,YAAY,KAAK,KAAK,QAAQ,uBAAuB,WAAW,WAAW;AAAA,MAC3E,MAAM;AAAA,MACN,QAAQ;AAAA,MACR;AAAA;AAGD,UAAM,aAAa,SAAS;AAAA;AAI7B,QAAM,yBAAyB,KAAK,KAAK,QAAQ,uBAAuB,UAAU;AAClF,QAAM,OAAO,KAAK,UAAU,oBAAoB,MAAM,OAAQ;AAC9D,QAAM,GAAG,UAAU,wBAAwB;AAAA;AAG5C;AAAC,AAAC;AACD;AACC,UAAM,IAAI,QAAQ;AAAA,WACV;AACR,YAAQ,MAAM,MAAM;AAAA;AAAA;",
  "names": []
}
