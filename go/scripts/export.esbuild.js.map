{
  "version": 3,
  "sources": ["export.ts"],
  "sourcesContent": ["import * as esbuild from \"esbuild\"\nimport * as fs from \"fs/promises\"\nimport * as path from \"path\"\nimport * as React from \"react\"\nimport * as ReactDOMServer from \"react-dom/server\"\nimport * as types from \"./types\"\n\n// RenderPayload describes a render payload (page metadata).\n//\n// prettier-ignore\ninterface RenderPayload {\n\toutputPath:   string\n\tpath:         string\n\tmodule:       types.StaticPageModule | types.DynamicPageModule\n\tserverProps?: types.ServerProps\n}\n\n// \"/\" -> \"/index.html\"\n// \"/nested/\" -> \"/nested/index.html\"\nfunction pathToHTML(path: string): string {\n\tif (!path.endsWith(\"/\")) return path + \".html\"\n\treturn path + \"index.html\"\n}\n\n// exportPage exports a page to disk.\nasync function exportPage(runtime: types.Runtime, render: RenderPayload): Promise<void> {\n\tlet head = \"<!-- <Head {...{ path, ...props }}> -->\"\n\tif (typeof render.module.Head === \"function\") {\n\t\thead = ReactDOMServer.renderToStaticMarkup(React.createElement(render.module.Head, render.serverProps))\n\t}\n\n\tlet page = \"<!-- <Page {...{ path, ...props }}> -->\"\n\tif (typeof render.module.default === \"function\") {\n\t\tpage = ReactDOMServer.renderToString(React.createElement(render.module.default, render.serverProps))\n\t}\n\n\t// prettier-ignore\n\thead = head\n\t\t.replace(/></g, \">\\n\\t\\t<\")\n\t\t.replace(/\\/>/g, \" />\")\n\n\tpage = `<noscript>You need to enable JavaScript to run this app.</noscript>\n\t\t<div id=\"root\">${page}</div>\n\t\t<script src=\"/app.js\"></script>`\n\n\t// prettier-ignore\n\tconst html = runtime.baseHTML\n\t\t.replace(\"%head%\", head)\n\t\t.replace(\"%page%\", page)\n\n\tawait fs.mkdir(path.dirname(render.outputPath), { recursive: true })\n\tawait fs.writeFile(render.outputPath, html)\n}\n\n// exportPages exports pages to disk.\nasync function exportPages(runtime: types.Runtime): Promise<types.ServerRouter> {\n\tconst appRouter: types.ServerRouter = {}\n\n\tconst service = await esbuild.startService()\n\n\t// TODO: Upgrade to Promise.all (add --concurrent?).\n\tfor (const filesystemRoute of runtime.filesystemRouter) {\n\t\t// Generate paths for esbuild:\n\t\tconst entryPoints = [filesystemRoute.inputPath]\n\t\tconst outfile = path.join(\n\t\t\truntime.directoryConfiguration.cacheDir,\n\t\t\tentryPoints[0]!.replace(/\\.(jsx?|tsx?)$/, \".esbuild.js\"),\n\t\t)\n\n\t\tawait service.build({\n\t\t\tbundle: true,\n\t\t\tdefine: {\n\t\t\t\t__DEV__: \"true\", // TODO\n\t\t\t\t\"process.env.NODE_ENV\": JSON.stringify(\"development\"), // TODO\n\t\t\t},\n\t\t\tentryPoints,\n\t\t\t// NOTE: Use \"external\" to prevent a React error: You might have\n\t\t\t// mismatching versions of React and the renderer (such as React DOM).\n\t\t\texternal: [\"react\", \"react-dom\"],\n\t\t\tformat: \"cjs\",\n\t\t\tloader: {\n\t\t\t\t\".js\": \"jsx\",\n\t\t\t},\n\t\t\tlogLevel: \"silent\", // TODO\n\t\t\toutfile,\n\t\t\t// plugins: [...configs.retro.plugins], // TODO\n\t\t})\n\t\t// TODO: Handle warnings and hints.\n\n\t\tconst mod = require(\"../\" + outfile)\n\n\t\t// TODO: Add cache check here.\n\n\t\tlet serverProps: types.ServerProps\n\t\tif (typeof mod.serverProps === \"function\") {\n\t\t\tserverProps = await mod.serverProps()\n\t\t\tserverProps = {\n\t\t\t\tpath: filesystemRoute.path, // Add path\n\t\t\t\t...serverProps,\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Warn here for non-dynamic filesystem routes.\n\t\tif (typeof mod.serverPaths === \"function\") {\n\t\t\tconst descriptServerPaths: types.DescriptiveServerPaths = await mod.serverPaths(serverProps)\n\n\t\t\tlet router: types.ServerRouter = {}\n\t\t\tfor (const serverPath of descriptServerPaths) {\n\t\t\t\trouter[serverPath.path] = {\n\t\t\t\t\tfilesystemRoute,\n\t\t\t\t\tserverProps: {\n\t\t\t\t\t\tpath: serverPath.path,\n\t\t\t\t\t\t...serverPath.props,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const [path_, meta] of Object.entries(router)) {\n\t\t\t\t// Cache meta:\n\t\t\t\t//\n\t\t\t\t// TODO: Warn here for repeat paths.\n\t\t\t\tappRouter[path_] = meta\n\t\t\t\tconst render: RenderPayload = {\n\t\t\t\t\toutputPath: path.join(runtime.directoryConfiguration.exportDir, pathToHTML(path_)),\n\t\t\t\t\tpath: path_,\n\t\t\t\t\tmodule: mod,\n\t\t\t\t\tserverProps: meta.serverProps,\n\t\t\t\t}\n\t\t\t\tawait exportPage(runtime, render)\n\t\t\t}\n\t\t\tcontinue\n\t\t}\n\n\t\tconst path_ = filesystemRoute.path\n\n\t\tconst meta = {\n\t\t\tfilesystemRoute,\n\t\t\tserverProps: {\n\t\t\t\tpath: path_,\n\t\t\t\t...serverProps,\n\t\t\t},\n\t\t}\n\n\t\t// Cache meta:\n\t\t//\n\t\t// TODO: Warn here for repeat paths.\n\t\tappRouter[path_] = meta\n\n\t\tconst render: RenderPayload = {\n\t\t\toutputPath: path.join(runtime.directoryConfiguration.exportDir, pathToHTML(path_)),\n\t\t\tpath: path_,\n\t\t\tmodule: mod,\n\t\t\tserverProps: serverProps,\n\t\t}\n\t\tawait exportPage(runtime, render)\n\t}\n\n\treturn appRouter\n}\n\n// renderAppSource renders the App source code (before esbuild).\n//\n// TODO: Write tests (pure function).\nexport async function renderAppSource(router: types.ServerRouter): Promise<string> {\n\t// Get the shared components:\n\tconst sharedComponents = [...new Set(Object.keys(router).map(keys => router[keys]!.filesystemRoute.component))]\n\n\t// Create a shared server router based on shared component keys:\n\tconst sharedRouter: types.ServerRouter = {}\n\n\t// prettier-ignore\n\tfor (const [, meta] of Object.entries(router)) {\n\t\tconst comp = meta.filesystemRoute.component\n\t\tif (sharedComponents.includes(comp) &&\n\t\t\t\tsharedRouter[comp] === undefined) {\n\t\t\tsharedRouter[comp] = meta\n\t\t}\n\t}\n\n\treturn `import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Route, Router } from \"../router\"\n\n// Shared components\n${Object.entries(sharedRouter)\n\t.map(([, { filesystemRoute }]) => `import ${filesystemRoute.component} from \"../${filesystemRoute.inputPath}\"`)\n\t.join(\"\\n\")}\n\nimport router from \"./router.json\"\n\nexport default function App() {\n\treturn (\n\t\t<Router>\n${\n\tObject.entries(router)\n\t\t.map(\n\t\t\t([path_, meta]) => `\n\t\t\t<Route path=\"${path_}\">\n\t\t\t\t<${meta.filesystemRoute.component} {...{\n\t\t\t\t\tpath: \"${path_}\",\n\t\t\t\t\t...router[\"${path_}\"].serverProps,\n\t\t\t\t}} />\n\t\t\t</Route>`,\n\t\t)\n\t\t.join(\"\\n\") + \"\\n\"\n}\n\t\t</Router>\n\t)\n}\n\nReactDOM.hydrate(\n\t// <React.StrictMode> // TODO\n\t<App />,\n\t// </React.StrictMode>\n\tdocument.getElementById(\"root\"),\n)\n`\n}\n\nasync function run(runtime: types.Runtime): Promise<void> {\n\tconst appRouter = await exportPages(runtime)\n\n\t// Cache appRouter for --cached:\n\tconst dst = path.join(runtime.directoryConfiguration.cacheDir, \"router.json\")\n\tconst data = JSON.stringify(appRouter, null, \"\\t\") + \"\\n\" // EOF\n\tawait fs.writeFile(dst, data)\n\n\tconst appSource = await renderAppSource(appRouter)\n\tconst appSourcePath = path.join(runtime.directoryConfiguration.cacheDir, \"app.js\")\n\tawait fs.writeFile(appSourcePath, appSource)\n\n\t// Generate paths for esbuild:\n\tconst entryPoints = [appSourcePath]\n\tconst outfile = entryPoints[0]!.replace(\n\t\tnew RegExp(\"^\" + runtime.directoryConfiguration.cacheDir.replace(\"/\", \"\\\\/\")), // TODO\n\t\truntime.directoryConfiguration.exportDir,\n\t)\n\n\tawait esbuild.build({\n\t\tbundle: true,\n\t\tdefine: {\n\t\t\t__DEV__: \"true\", // TODO\n\t\t\t\"process.env.NODE_ENV\": JSON.stringify(\"development\"), // TODO\n\t\t},\n\t\tentryPoints,\n\t\tformat: \"iife\", // DOM\n\t\tloader: {\n\t\t\t\".js\": \"jsx\",\n\t\t},\n\t\tlogLevel: \"silent\", // TODO\n\t\toutfile,\n\t\t// TODO: We should probably only need to resolve plugins once.\n\t\t// plugins: [...configs.retro.plugins],\n\t})\n}\n\n;(async () => {\n\ttry {\n\t\tawait run(require(\"../__cache__/runtime.json\"))\n\t} catch (error) {\n\t\tconsole.error(error.stack)\n\t}\n})()\n"],
  "mappings": "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",
  "names": []
}
