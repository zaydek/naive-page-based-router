import conf from "./conf"
import fs from "fs"
import path from "path"
import { buildSync } from "esbuild"
import { getPageSrcs } from "./utils"
import { parseRouteInfo } from "../Router/parts"
import { detab } from "../utils"

const srcs = getPageSrcs()

// prettier-ignore
const routeInfos = srcs
	.map(each => path.parse(each).name)      // Pages
	.map(each => parseRouteInfo("/" + each)) // RouteInfo

// TODO: Change to `ReactDOM.hydrate`.
// TODO: Add support for `React.StrictMode`?
// TODO: Add support for `<App>` wrapper component.
// TODO: Add support for **not** bundling JavaScript.
function run() {
	// prettier-ignore
	const app = `
// THIS FILE IS AUTOGENERATED.
// THESE AREN’T THE FILES YOU’RE LOOKING FOR. MOVE ALONG.

import React from "react"
import ReactDOM from "react-dom"
import { Route, Router } from "../Router"

// Pages
${routeInfos.map(each =>
	`import ${each!.component} from ${JSON.stringify("../" + conf.PAGES_DIR + each!.page)}`
).join("\n")}

// Page props
import pageProps from "./pageProps"

export default function App() {
	return (
		<Router>
			${routeInfos.map(each => `
			<Route page=${JSON.stringify(each!.page)}>
				<${each!.component} {...pageProps[${JSON.stringify(each!.page)}]} />
			</Route>
`).join("")}
		</Router>
	)
}

${
	!conf.STRICT_MODE ?
	detab(`
		ReactDOM.hydrate(
			<App />,
			document.getElementById("root"),
		)`)
	:
	detab(`
		ReactDOM.hydrate(
			<React.StrictMode>
				<App />
			</React.StrictMode>,
			document.getElementById("root"),
		)`)
}`.trimStart()

	fs.writeFileSync(conf.CACHE_DIR + "/app.js", app + "\n")

	buildSync({
		bundle: true,
		define: {
			__DEV__: JSON.stringify(conf.__DEV__),
			"process.env.NODE_ENV": JSON.stringify(conf.NODE_ENV),
		},
		entryPoints: [conf.CACHE_DIR + "/app.js"],
		loader: { ".js": "jsx" },
		minify: !conf.__DEV__,
		outfile: conf.BUILD_DIR + "/app.js",
	})
}

;(() => {
	run()
})()
