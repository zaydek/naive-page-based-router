retro-react is a page-based router and server-side generator for react projects

retro-react is most similar to gatsby, next, and remix run. retro-react does not
yet support server-side but is architecturally capable

retro-react solves the following problem:
	- you want to make a react app
	- you want *some* pages to be server-side generated
	- you want *some* pages to be client-side rendered
	- you want *some* pages to be markdown documents
	- you want your markdown pages to support react interactivity / components
	- you want a fast-as-possible developer experience
	- you want page-based routing and client-side routing and linking to be a solved problem
	- you want to live long and prosper ðŸ––

retro-react solves for these problems by providing:
	- ready-to-go javascript and typescript templates
	- rapid-development server
	- server-side generated or client-side rendered per route (server-side generated by default)
	- export load and head functions to resolve page props and head metadata at build-time
	- automatic client-side routing and linking
	- support for mdx routes

reasons to not use retro:
	- it is not built on top of the conventional / modern, that is, webpack and babel
	- webpack tooling is critical to your app
	- babel tooling is critical to your app
	- live reloading isn't good enough for you, you need hot reloading (if you donâ€™t know the difference then donâ€™t worry)
	- this means you can't use webpack or babel plugins with retro
	- it's not documented yet
	- it's not 1.0 ready
	- you're afraid of change

	retro-react is the frontend javascript library. it provides react helpers such as <link>
	retro-react-scripts is the backend go binary. it provides command-line apis

		# bootstraps a react or typescript react project in the current or specified directory
		retro-react-scripts create --template=typescript

		# resolves loaders and starts the rapid-development server
		PORT=<port> retro-react-scripts watch --port=<port> --cached

		# resolves loaders and builds the production-ready build
		retro-react-scripts build --cached

		# serves the production-ready build; requires retro-react-scripts build to be run
		retro-react-scripts serve

have a retro day!
