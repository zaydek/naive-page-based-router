{
  "version": 3,
  "sources": ["../../node_modules/color-name/index.js", "../../node_modules/color-convert/conversions.js", "../../node_modules/color-convert/route.js", "../../node_modules/color-convert/index.js", "../../node_modules/ansi-styles/index.js", "../../node_modules/has-flag/index.js", "../../node_modules/supports-color/index.js", "../../node_modules/chalk/source/util.js", "../../node_modules/chalk/source/templates.js", "../../node_modules/chalk/source/index.js", "../lib/log.ts", "cli.ts", "cmd_export.ts", "utils.ts", "parsePages.ts", "runServerGuards.ts", "cmd_serve.ts", "logRequest.ts"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n", "const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n", "const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n", "'use strict';\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = require('color-convert');\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n", "'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n", "'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n", "'use strict';\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n", "'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tconst u = c[0] === 'u';\n\tconst bracket = c[1] === '{';\n\n\tif ((u && !bracket && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\tif (u && bracket) {\n\t\treturn String.fromCodePoint(parseInt(c.slice(2, -1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, arguments_) {\n\tconst results = [];\n\tconst chunks = arguments_.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tconst number = Number(chunk);\n\t\tif (!Number.isNaN(number)) {\n\t\t\tresults.push(number);\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const [styleName, styles] of Object.entries(enabled)) {\n\t\tif (!Array.isArray(styles)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!(styleName in current)) {\n\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t}\n\n\t\tcurrent = styles.length > 0 ? current[styleName](...styles) : current[styleName];\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, temporary) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttemporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\n\t\tif (escapeCharacter) {\n\t\t\tchunk.push(unescape(escapeCharacter));\n\t\t} else if (style) {\n\t\t\tconst string = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(character);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMessage);\n\t}\n\n\treturn chunks.join('');\n};\n", "'use strict';\nconst ansiStyles = require('ansi-styles');\nconst {stdout: stdoutColor, stderr: stderrColor} = require('supports-color');\nconst {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n} = require('./util');\n\nconst {isArray} = Array;\n\n// `supportsColor.level` \u2192 `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = {};\n\tapplyOptions(chalk, options);\n\n\tchalk.template = (...arguments_) => chalkTag(chalk.template, ...arguments_);\n\n\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\tObject.setPrototypeOf(chalk.template, chalk);\n\n\tchalk.template.constructor = () => {\n\t\tthrow new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\t};\n\n\tchalk.template.Instance = ChalkClass;\n\n\treturn chalk.template;\n};\n\nfunction Chalk(options) {\n\treturn chalkFactory(options);\n}\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this._styler, true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t}\n};\n\nconst usedModels = ['rgb', 'hex', 'keyword', 'hsl', 'hsv', 'hwb', 'ansi', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nfor (const model of usedModels) {\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this._generator.level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis._generator.level = level;\n\t\t}\n\t}\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\tconst builder = (...arguments_) => {\n\t\tif (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\t\t\t// Called as a template literal, for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\t\t\treturn applyStyle(builder, chalkTag(builder, ...arguments_));\n\t\t}\n\n\t\t// Single argument is hot path, implicit coercion is faster than anything\n\t\t// eslint-disable-next-line no-implicit-coercion\n\t\treturn applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\t};\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder._generator = self;\n\tbuilder._styler = _styler;\n\tbuilder._isEmpty = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self._isEmpty ? '' : string;\n\t}\n\n\tlet styler = self._styler;\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.indexOf('\\u001B') !== -1) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk, ...strings) => {\n\tconst [firstString] = strings;\n\n\tif (!isArray(firstString) || !isArray(firstString.raw)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn strings.join(' ');\n\t}\n\n\tconst arguments_ = strings.slice(1);\n\tconst parts = [firstString.raw[0]];\n\n\tfor (let i = 1; i < firstString.length; i++) {\n\t\tparts.push(\n\t\t\tString(arguments_[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'),\n\t\t\tString(firstString.raw[i])\n\t\t);\n\t}\n\n\tif (template === undefined) {\n\t\ttemplate = require('./templates');\n\t}\n\n\treturn template(chalk, parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype, styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n", "import chalk from \"chalk\"\n\nlet once = false\n\n// format converts tabs to spaces and adds two spaces to the start.\nfunction format(...args: unknown[]): string {\n\tif (args.length === 1 && args[0] instanceof Error) {\n\t\treturn format(args[0].message)\n\t}\n\n\treturn args\n\t\t.join(\" \")\n\t\t.split(\"\\n\")\n\t\t.map((each, x) => {\n\t\t\tif (x === 0) return each\n\t\t\tif (each === \"\") return each\n\t\t\treturn \" \".repeat(2) + each.replace(\"\\t\", \"  \")\n\t\t})\n\t\t.join(\"\\n\")\n}\n\n// \"> ok: ...\"\nexport function ok(...args: unknown[]): void {\n\tconst message = format(...args)\n\tif (!once) console.log()\n\tconsole.log(`${\" \".repeat(2)}${chalk.bold(\">\")} ${chalk.bold.green(\"ok:\")} ${chalk.bold(message)}`)\n\tconsole.log()\n\tonce = true\n}\n\n// \"> warning: ...\"\nexport function warning(...args: unknown[]): void {\n\tconst message = format(...args)\n\tif (!once) console.warn()\n\tconsole.warn(`${\" \".repeat(2)}${chalk.bold(\">\")} ${chalk.bold.yellow(\"warning:\")} ${chalk.bold(message)}`)\n\tconsole.warn()\n\tonce = true\n}\n\n// \"> error: ...\"\nexport function error(...args: unknown[]): void {\n\tconst message = format(...args)\n\tconst traceEnabled = process.env[\"STACK_TRACE\"] === \"true\"\n\tif (!traceEnabled) {\n\t\tif (!once) console.error()\n\t\tconsole.error(`${\" \".repeat(2)}${chalk.bold(\">\")} ${chalk.bold.red(\"error:\")} ${chalk.bold(message)}`)\n\t\tconsole.error()\n\t} else {\n\t\tif (!once) console.error()\n\t\tconsole.error(`${\" \".repeat(2)}${chalk.bold(\">\")} ${chalk.bold.red(\"error:\")} ${chalk.bold(message)}`)\n\t\tconsole.error()\n\t\t// console.error({ error: message }) // TODO?\n\t}\n\tprocess.exit(0)\n}\n", "import * as log from \"../lib/log\"\nimport * as types from \"./types\"\n\nimport chalk from \"chalk\"\nimport cmd_export from \"./cmd_export\"\nimport cmd_serve from \"./cmd_serve\"\n\nconst cmds = `\nretro dev     Start the dev server\nretro export  Export the production-ready build (SSG)\nretro serve   Serve the production-ready build\n`.trim()\n\nconst usage = `\n\t${chalk.bold(\"Usage:\")}\n\n\t\tretro dev     Start the dev server\n\t\tretro export  Export the production-ready build (SSG)\n\t\tretro serve   Serve the production-ready build\n\n\t${chalk.bold(\"retro dev\")}\n\n\t\tStart the dev server\n\n\t\t\t--cached=...     Use cached resources (default false)\n\t\t\t--sourcemap=...  Add source maps (default true)\n\t\t\t--port=...       Port number (default 8000)\n\n\t${chalk.bold(\"retro export\")}\n\n\t\tExport the production-ready build (SSG)\n\n\t\t\t--cached=...     Use cached resources (default false)\n\t\t\t--sourcemap=...  Add source maps (default true)\n\n\t${chalk.bold(\"retro serve\")}\n\n\t\tServe the production-ready build\n\n\t\t\t--mode=...       Serve mode 'spa' or 'ssg' (default 'ssg')\n\t\t\t--port=...       Port number (default 8000)\n\n\t${chalk.bold(\"Repository\")}\n\n\t\t${chalk.underline(\"https://github.com/zaydek/retro\")}\n`\n\n// parseDevCommandFlags parses 'retro dev [flags]'.\n//\n// TODO: Write tests.\nfunction parseDevCommandFlags(...args: string[]): types.DevCommand {\n\tconst cmd: types.DevCommand = {\n\t\ttype: \"dev\",\n\t\tcached: false,\n\t\tsourcemap: true,\n\t\tport: 8000,\n\t}\n\tlet badCmd = \"\"\n\tfor (const arg of args) {\n\t\tif (arg.startsWith(\"--cached\")) {\n\t\t\tif (arg === \"--cached\") {\n\t\t\t\tcmd.cached = true\n\t\t\t} else if (arg === \"--cached=true\" || arg === \"--cached=false\") {\n\t\t\t\tcmd.cached = JSON.parse(arg.slice(\"--cached=\".length))\n\t\t\t} else {\n\t\t\t\tbadCmd = \"--cached\"\n\t\t\t\tbreak\n\t\t\t}\n\t\t} else if (arg.startsWith(\"--sourcemap\")) {\n\t\t\tif (arg === \"--sourcemap\") {\n\t\t\t\tcmd.sourcemap = true\n\t\t\t} else if (arg === \"--sourcemap=true\" || arg === \"--sourcemap=false\") {\n\t\t\t\tcmd.sourcemap = JSON.parse(arg.slice(\"--sourcemap=\".length))\n\t\t\t} else {\n\t\t\t\tbadCmd = \"--sourcemap\"\n\t\t\t\tbreak\n\t\t\t}\n\t\t} else if (arg.startsWith(\"--port\")) {\n\t\t\tif (/^--port=\\d+$/.test(arg)) {\n\t\t\t\tcmd.port = JSON.parse(arg.slice(\"--port=\".length))\n\t\t\t} else {\n\t\t\t\tbadCmd = \"--port\"\n\t\t\t\tbreak\n\t\t\t}\n\t\t} else {\n\t\t\tbadCmd = arg\n\t\t}\n\t}\n\tif (badCmd !== \"\") {\n\t\tlog.error(`Bad command '${badCmd}'. You can use 'retro help' for help.`)\n\t}\n\tif (cmd.port < 1e3 || cmd.port >= 1e4) {\n\t\tlog.error(\"'--port' must be between 1000-9999.\")\n\t}\n\treturn cmd\n}\n\n// parseExportCommandFlags parses 'retro export [flags]'.\n//\n// TODO: Write tests.\nfunction parseExportCommandFlags(...args: string[]): types.ExportCommand {\n\tconst cmd: types.ExportCommand = {\n\t\ttype: \"export\",\n\t\tcached: false,\n\t\tsourcemap: true,\n\t}\n\tlet badCmd = \"\"\n\tfor (const arg of args) {\n\t\tif (arg.startsWith(\"--cached\")) {\n\t\t\tif (arg === \"--cached\") {\n\t\t\t\tcmd.cached = true\n\t\t\t} else if (arg === \"--cached=true\" || arg === \"--cached=false\") {\n\t\t\t\tcmd.cached = JSON.parse(arg.slice(\"--cached=\".length))\n\t\t\t} else {\n\t\t\t\tbadCmd = \"--cached\"\n\t\t\t\tbreak\n\t\t\t}\n\t\t} else if (arg.startsWith(\"--sourcemap\")) {\n\t\t\tif (arg === \"--sourcemap\") {\n\t\t\t\tcmd.sourcemap = true\n\t\t\t} else if (arg === \"--sourcemap=true\" || arg === \"--sourcemap=false\") {\n\t\t\t\tcmd.sourcemap = JSON.parse(arg.slice(\"--sourcemap=\".length))\n\t\t\t} else {\n\t\t\t\tbadCmd = \"--sourcemap\"\n\t\t\t\tbreak\n\t\t\t}\n\t\t} else {\n\t\t\tbadCmd = arg\n\t\t}\n\t}\n\tif (badCmd !== \"\") {\n\t\tlog.error(`Bad command '${badCmd}'. You can use 'retro help' for help.`)\n\t}\n\treturn cmd\n}\n\n// parseServeCommandFlags parses 'retro serve [flags]'.\n//\n// TODO: Write tests.\nfunction parseServeCommandFlags(...args: string[]): types.ServeCommand {\n\tconst cmd: types.ServeCommand = {\n\t\ttype: \"serve\",\n\t\tmode: \"ssg\",\n\t\tport: 8000,\n\t}\n\tlet badCmd = \"\"\n\tfor (const arg of args) {\n\t\tif (arg.startsWith(\"--mode\")) {\n\t\t\tif (arg === \"--mode=spa\") {\n\t\t\t\tcmd.mode = \"spa\"\n\t\t\t} else if (arg === \"--mode=ssg\") {\n\t\t\t\tcmd.mode = \"ssg\"\n\t\t\t} else {\n\t\t\t\tbadCmd = \"--mode\"\n\t\t\t\tbreak\n\t\t\t}\n\t\t} else if (arg.startsWith(\"--port\")) {\n\t\t\tif (/^--port=\\d+$/.test(arg)) {\n\t\t\t\tcmd.port = JSON.parse(arg.slice(\"--port=\".length))\n\t\t\t} else {\n\t\t\t\tbadCmd = \"--port\"\n\t\t\t\tbreak\n\t\t\t}\n\t\t} else {\n\t\t\tbadCmd = arg\n\t\t}\n\t}\n\tif (badCmd !== \"\") {\n\t\tlog.error(`Bad command '${badCmd}'. You can use 'retro help' for help.`)\n\t}\n\tif (cmd.port < 1e3 || cmd.port >= 1e4) {\n\t\tlog.error(\"'--port' must be between 1000-9999.\")\n\t}\n\treturn cmd\n}\n\n// // cmd returns the command used.\n// function cmd(): string {\n// \tconst args = process.argv0 === \"node\" ? process.argv.slice(1) : process.argv\n// \treturn `retro ${args.slice(1).join(\" \")}`\n// }\n\nasync function run(): Promise<void> {\n\tconst args = process.argv0 === \"node\" ? process.argv.slice(1) : process.argv\n\n\t// Cover [\"retro\"] case:\n\tif (args.length === 1) {\n\t\tconsole.log(usage.replace(\"\\t\", \" \".repeat(2)))\n\t\tprocess.exit(0)\n\t}\n\n\tlet command: types.Command\n\tconst arg = args[1]\n\tif (arg === \"version\" || arg === \"--version\" || arg === \"--v\") {\n\t\tconsole.log(process.env[\"RETRO_VERSION\"] || \"TODO\")\n\t\tprocess.exit(0)\n\t} else if (arg === \"usage\" || arg === \"--usage\" || arg === \"help\" || arg === \"--help\") {\n\t\tconsole.log(usage.replace(\"\\t\", \" \".repeat(2)))\n\t\tprocess.exit(0)\n\t} else if (arg === \"dev\") {\n\t\tprocess.env[\"__DEV__\"] = \"true\"\n\t\tprocess.env[\"NODE_ENV\"] = \"development\"\n\t\tcommand = parseDevCommandFlags(...args.slice(2))\n\t} else if (arg === \"export\") {\n\t\tprocess.env[\"__DEV__\"] = \"false\"\n\t\tprocess.env[\"NODE_ENV\"] = \"production\"\n\t\tcommand = parseExportCommandFlags(...args.slice(2))\n\t} else if (arg === \"serve\") {\n\t\tprocess.env[\"__DEV__\"] = \"false\"\n\t\tprocess.env[\"NODE_ENV\"] = \"production\"\n\t\tcommand = parseServeCommandFlags(...args.slice(2))\n\t} else {\n\t\tlog.error(`No such command '${arg}'. Use one of these commands:\n\n${cmds}\n\nOr 'retro usage' for usage.`)\n\t}\n\n\t// prettier-ignore\n\tconst runtime: types.Runtime = {\n\t\tcommand: command!,\n\t\tdirectories: {\n\t\t\tpublicDir:   process.env.PUBLIC_DIR || \"public\",\n\t\t\tsrcPagesDir: process.env.PAGES_DIR  || \"src/pages\",\n\t\t\tcacheDir:    process.env.CACHE_DIR  || \"__cache__\",\n\t\t\texportDir:   process.env.EXPORT_DIR || \"__export__\",\n\t\t},\n\t\tdocument: \"\", // Defer to dev and export\n\t\tpages: [],    // Defer to dev and export\n\t}\n\n\tif (runtime.command.type === \"dev\") {\n\t\t// await cmd_dev(runtime as types.Runtime<types.DevCommand>)\n\t} else if (runtime.command.type === \"export\") {\n\t\tawait cmd_export(runtime as types.Runtime<types.ExportCommand>)\n\t} else if (runtime.command.type === \"serve\") {\n\t\tawait cmd_serve(runtime as types.Runtime<types.ServeCommand>)\n\t}\n}\n\nprocess.on(\"uncaughtException\", err => {\n\tprocess.env[\"STACK_TRACE\"] = \"true\"\n\terr.message = `UncaughtException: ${err.message}`\n\tlog.error(err)\n})\n\nrun()\n", "import * as esbuild from \"esbuild\"\nimport * as fs from \"fs\"\nimport * as log from \"../lib/log\"\nimport * as p from \"path\"\nimport * as React from \"react\"\nimport * as ReactDOMServer from \"react-dom/server\"\nimport * as types from \"./types\"\nimport * as utils from \"./utils\"\n\nimport chalk from \"chalk\"\nimport parsePages from \"./parsePages\"\nimport runServerGuards from \"./runServerGuards\"\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction errServerPropsFunction(src: string): string {\n\treturn `${src}: 'typeof serverProps !== \"function\"'; 'serverProps' must be a synchronous or an asynchronous function.\n\nFor example:\n\n// Synchronous:\nexport function serverProps() {\n\treturn { ... }\n}\n\n// Asynchronous:\nexport async function serverProps() {\n\tawait ...\n\treturn { ... }\n}`\n}\n\nfunction errServerPathsFunction(src: string): string {\n\treturn `${src}: 'typeof serverPaths !== \"function\"'; 'serverPaths' must be a synchronous or an asynchronous function.\n\nFor example:\n\n// Synchronous:\nexport function serverPaths() {\n\treturn { ... }\n}\n\n// Asynchronous:\nexport async function serverPaths() {\n\tawait ...\n\treturn { ... }\n}`\n}\n\nfunction errServerPropsMismatch(src: string): string {\n\treturn `${src}: Dynamic pages must use 'serverPaths' not 'serverProps'.\n\nFor example:\n\nexport function serverPaths() {\n\treturn [\n\t\t{ path: \"/foo\", props: ... },\n\t\t{ path: \"/foo/bar\", props: ... },\n\t\t{ path: \"/foo/bar/baz\", props: ... },\n\t]\n}\n\nNote paths are directory-scoped.`\n}\n\nfunction errServerPropsReturn(src: string): string {\n\treturn `${src}: 'typeof props !== \"object\"'; 'serverProps' must return an object.\n\nFor example:\n\nexport function serverProps() {\n\treturn { ... }\n}`\n}\n\n// TODO\nfunction errServerPathsReturn(src: string): string {\n\treturn `${src}: 'typeof props !== \"object\"'; 'serverProps' must return an object.\n\nFor example:\n\nexport function serverProps() {\n\treturn { ... }\n}`\n}\n\nfunction errServerPathsMismatch(src: string): string {\n\treturn `${src}: Non-dynamic pages must use 'serverProps' not 'serverPaths'.\n\nFor example:\n\nexport function serverProps() {\n\treturn { ... }\n}`\n}\n\nfunction errPathExists(r1: ServerRoute, r2: ServerRoute): string {\n\treturn `${r1.src}: Path '${r1.path}' is already being used by ${r2.src}.`\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Props describes runtime props.\ntype Props = { [key: string]: unknown }\n\n// DescriptServerProps describes runtime props resolved on the server.\ntype ServerResolvedProps = Props & { path: string }\n\n// PageModule ambiguously describes a page module.\ninterface PageModule {\n\tHead?: (props: ServerResolvedProps) => JSX.Element\n\tdefault?: (props: ServerResolvedProps) => JSX.Element\n}\n\n// StaticPageModule describes a static page module.\ninterface StaticPageModule extends PageModule {\n\tserverProps?(): Promise<ServerResolvedProps>\n}\n\n// DynamicPageModule describes a dynamic page module.\ninterface DynamicPageModule extends PageModule {\n\tserverPaths(): Promise<{ path: string; props: Props }[]>\n}\n\n// prettier-ignore\ninterface ServerRoute {\n\ttype:      \"static\" | \"dynamic\"\n\tsrc:       string // e.g. \"src/pages/index.js\"\n\tdst:       string // e.g. \"dst/index.html\"\n\tpath:      string // e.g. \"/\"\n\tcomponent: string // e.g. \"PageIndex\"\n}\n\ninterface RouteMeta {\n\troute: ServerRoute\n\tprops: ServerResolvedProps\n}\n\ninterface Router {\n\t[key: string]: RouteMeta\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Based on https://github.com/evanw/esbuild/blob/master/lib/common.ts#L35.\n// prettier-ignore\nfunction testServerPropsReturn(value: unknown): boolean {\n\treturn utils.testObject(value)\n}\n\n// prettier-ignore\nfunction testServerPathsReturn(value: unknown): boolean {\n\ttype A = unknown[]\n\ttype O = { [key: string]: unknown }\n\n\tconst ok = utils.testArray(value) &&\n\t\t(value as A).every(each => {\n\t\t\tconst ok = utils.testObject(each) &&\n\t\t\t\t(\"path\" in (each as O) && typeof (each as O).path === \"string\") && // each.path\n\t\t\t\t(\"props\" in (each as O) && utils.testObject((each as O).props))    // each.props\n\t\t\treturn ok\n\t\t})\n\treturn ok\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// exportPage exports a page.\nasync function exportPage(runtime: types.Runtime, meta: RouteMeta, mod: PageModule): Promise<void> {\n\tlet head = \"<!-- <Head> -->\"\n\ttry {\n\t\tif (typeof mod.Head === \"function\") {\n\t\t\tconst renderString = ReactDOMServer.renderToStaticMarkup(React.createElement(mod.Head, meta.props))\n\t\t\thead = renderString.replace(/></g, \">\\n\\t\\t<\").replace(/\\/>/g, \" />\")\n\t\t}\n\t} catch (err) {\n\t\tlog.error(`${meta.route.src}.Head: ${err.message}`)\n\t}\n\n\tlet page = `<noscript>You need to enable JavaScript to run this app.</noscript>\n\t\t<div id=\"root\"></div>`\n\ttry {\n\t\tif (typeof mod.default === \"function\") {\n\t\t\tconst renderString = ReactDOMServer.renderToString(React.createElement(mod.default, meta.props))\n\t\t\tpage = page.replace(`<div id=\"root\"></div>`, `<div id=\"root\">${renderString}</div>`)\n\t\t}\n\t} catch (err) {\n\t\tlog.error(`${meta.route.src}.default: ${err.message}`)\n\t}\n\n\t// Export:\n\tconst rendered = runtime.document.replace(\"%head%\", head).replace(\"%page%\", page)\n\tawait fs.promises.mkdir(p.dirname(meta.route.dst), { recursive: true })\n\tawait fs.promises.writeFile(meta.route.dst, rendered)\n}\n\nasync function resolveStaticRouteMeta(\n\truntime: types.Runtime<types.ExportCommand>,\n\tpage: types.StaticPageMeta,\n\toutfile: string,\n): Promise<RouteMeta> {\n\tlet props: ServerResolvedProps = { path: page.path }\n\n\t// NOTE: Use try to suppress: warning: This call to \"require\" will not be\n\t// bundled because the argument is not a string literal (surround with a\n\t// try/catch to silence this warning).\n\tlet mod: StaticPageModule\n\ttry {\n\t\tmod = require(p.join(\"..\", \"..\", outfile))\n\t} catch {}\n\n\t// Guard serverProps and serverPaths:\n\tif (\"serverProps\" in mod! && typeof mod.serverProps !== \"function\") {\n\t\tlog.error(errServerPropsFunction(page.src))\n\t} else if (\"serverPaths\" in mod! && typeof (mod as { [key: string]: unknown }).serverPaths === \"function\") {\n\t\tlog.error(errServerPathsMismatch(page.src))\n\t}\n\n\t// Resolve serverProps:\n\tif (typeof mod!.serverProps === \"function\") {\n\t\ttry {\n\t\t\tconst serverProps = await mod!.serverProps!()\n\t\t\tif (!testServerPropsReturn(serverProps)) {\n\t\t\t\tlog.error(errServerPropsReturn(page.src))\n\t\t\t}\n\t\t\tprops = {\n\t\t\t\t// @ts-ignore\n\t\t\t\tpath: page.path, // Add path\n\t\t\t\t...serverProps,\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tlog.error(`${page.src}.serverProps: ${err.message}`)\n\t\t}\n\t}\n\n\tconst meta = { route: page, props }\n\tawait exportPage(runtime, meta, mod!)\n\treturn meta\n}\n\nasync function resolveDynamicRouteMetas(\n\truntime: types.Runtime<types.ExportCommand>,\n\tpage: types.PageMeta,\n\toutfile: string,\n): Promise<RouteMeta[]> {\n\tconst metas: RouteMeta[] = []\n\n\t// NOTE: Use try to suppress: warning: This call to \"require\" will not be\n\t// bundled because the argument is not a string literal (surround with a\n\t// try/catch to silence this warning).\n\tlet mod: DynamicPageModule\n\ttry {\n\t\tmod = require(p.join(\"..\", \"..\", outfile))\n\t} catch {}\n\n\t// Guard serverProps and serverPaths:\n\tif (\"serverPaths\" in mod! && typeof mod.serverPaths !== \"function\") {\n\t\tlog.error(errServerPathsFunction(page.src))\n\t} else if (\"serverProps\" in mod! && typeof (mod as { [key: string]: unknown }).serverProps === \"function\") {\n\t\tlog.error(errServerPropsMismatch(page.src))\n\t}\n\n\t// Resolve serverPaths:\n\tif (typeof mod!.serverPaths === \"function\") {\n\t\tlet paths: { path: string; props: Props }[] = []\n\t\ttry {\n\t\t\tpaths = await mod!.serverPaths!()\n\t\t\tif (!testServerPathsReturn(paths)) {\n\t\t\t\tlog.error(errServerPathsReturn(page.src))\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tlog.error(`${page.src}.serverPaths: ${err.message}`)\n\t\t}\n\n\t\tfor (const path of paths) {\n\t\t\tconst path_ = p.join(p.dirname(page.src).slice(runtime.directories.srcPagesDir.length), path.path)\n\t\t\tconst dst = p.join(runtime.directories.exportDir, path_ + \".html\")\n\t\t\tmetas.push({\n\t\t\t\troute: {\n\t\t\t\t\ttype: \"dynamic\",\n\t\t\t\t\tsrc: page.src,\n\t\t\t\t\tdst,\n\t\t\t\t\tpath: path_,\n\t\t\t\t\tcomponent: page.component,\n\t\t\t\t},\n\t\t\t\tprops: {\n\t\t\t\t\tpath: path_, // Add path\n\t\t\t\t\t...path.props,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}\n\n\tfor (const meta of metas) {\n\t\tawait exportPage(runtime, meta, mod!)\n\t}\n\treturn metas\n}\n\n// resolveServerRouter exports pages and resolves the server router; resolves\n// mod.serverProps and mod.serverPaths.\nasync function resolveServerRouter(runtime: types.Runtime<types.ExportCommand>): Promise<Router> {\n\tconst router: Router = {}\n\n\t// TODO: Add --concurrent?\n\tconsole.log() // \"\\n\"\n\tconst service = await esbuild.startService()\n\tfor (const page of runtime.pages) {\n\t\t// Generate paths for esbuild:\n\t\tconst entryPoints = [page.src]\n\t\tconst outfile = p.join(runtime.directories.cacheDir, page.src.replace(/\\.(jsx?|tsx?|mdx?)$/, \".esbuild.js\"))\n\n\t\ttry {\n\t\t\t// Use external: [\"react\", \"react-dom\"] to prevent a React error: You\n\t\t\t// might have mismatching versions of React and the renderer (such as\n\t\t\t// React DOM).\n\t\t\tconst result = await service.build({\n\t\t\t\tbundle: true,\n\t\t\t\tdefine: {\n\t\t\t\t\t__DEV__: process.env.__DEV__!,\n\t\t\t\t\t\"process.env.NODE_ENV\": JSON.stringify(process.env.NODE_ENV!),\n\t\t\t\t},\n\t\t\t\tentryPoints,\n\t\t\t\texternal: [\"react\", \"react-dom\"],\n\t\t\t\tformat: \"cjs\", // Node.js\n\t\t\t\tinject: [\"packages/retro/react-shim.js\"],\n\t\t\t\tloader: { \".js\": \"jsx\" },\n\t\t\t\tlogLevel: \"silent\", // TODO\n\t\t\t\toutfile,\n\t\t\t\t// plugins: [...configs.retro.plugins], // TODO\n\t\t\t})\n\t\t\t// TODO: Add support for hints.\n\t\t\tif (result.warnings.length > 0) {\n\t\t\t\tfor (const warning of result.warnings) {\n\t\t\t\t\tlog.warning(utils.formatMessage(warning, chalk.yellow))\n\t\t\t\t}\n\t\t\t\tprocess.exit(1)\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tlog.error(err)\n\t\t\tprocess.exit(1)\n\t\t}\n\n\t\t// Resolve static page:\n\t\tif (page.type === \"static\") {\n\t\t\tconst d1 = Date.now()\n\t\t\tconst meta = await resolveStaticRouteMeta(runtime, page, outfile)\n\t\t\tif (router[meta.route.path] !== undefined) {\n\t\t\t\tlog.error(errPathExists(meta.route, router[meta.route.path]!.route))\n\t\t\t}\n\t\t\trouter[meta.route.path] = meta\n\t\t\tconst d2 = Date.now()\n\t\t\tconst sep = chalk.gray(\"-\".repeat(Math.max(0, 37 - meta.route.src.length)))\n\t\t\tconsole.log(`${\" \".repeat(2)}${chalk.green(`${meta.route.src} ${sep} ${meta.route.dst} (${d2 - d1}ms)`)}`)\n\t\t}\n\n\t\t// Resolve dynamic pages:\n\t\tif (page.type === \"dynamic\") {\n\t\t\tconst d1 = Date.now()\n\t\t\tconst metas = await resolveDynamicRouteMetas(runtime, page, outfile)\n\t\t\tfor (const meta of metas) {\n\t\t\t\tif (router[meta.route.path] !== undefined) {\n\t\t\t\t\tlog.error(errPathExists(meta.route, router[meta.route.path]!.route))\n\t\t\t\t}\n\t\t\t\trouter[meta.route.path] = meta\n\t\t\t\tconst d2 = Date.now()\n\t\t\t\tconst sep = chalk.gray(\"-\".repeat(Math.max(0, 37 - meta.route.src.length)))\n\t\t\t\tconsole.log(`${\" \".repeat(2)}${chalk.cyan(`${meta.route.src} ${sep} ${meta.route.dst} (${d2 - d1}ms)`)}`)\n\t\t\t}\n\t\t}\n\t}\n\n\tconsole.log() // \"\\n\"\n\treturn router\n}\n\nfunction prettyJSON(str: string): string {\n\treturn str.replace(/^{\"/, `{ \"`).replace(/\":\"/g, `\": \"`).replace(/\",\"/g, `\", \"`).replace(/\"}$/, `\" }`)\n}\n\n// renderAppSource renders the app source code; depends on the server router.\n//\n// TODO: Write tests (pure function).\nexport async function renderAppSource(runtime: types.Runtime<types.ExportCommand>, router: Router): Promise<string> {\n\tconst distinctComponents = [...new Set(runtime.pages.map(each => each.component))] // TODO: Change to router?\n\n\tconst distinctRoutes = runtime.pages\n\t\t.filter(route => distinctComponents.includes(route.component))\n\t\t.sort((a, b) => a.component.localeCompare(b.component))\n\n\treturn `import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Route, Router } from \"../router\"\n\n// Components\n${distinctRoutes.map(route => `import ${route.component} from \"../${route.src}\"`).join(\"\\n\")}\n\nexport default function App() {\n\treturn (\n\t\t<Router>\n${\n\tObject.entries(router)\n\t\t.map(\n\t\t\t([path, meta]) => `\n\t\t\t<Route path=\"${path}\">\n\t\t\t\t<${meta.route.component}\n\t\t\t\t\t{...${prettyJSON(JSON.stringify(meta.props))}\n\t\t\t\t} />\n\t\t\t</Route>`,\n\t\t)\n\t\t.join(\"\\n\") + \"\\n\"\n}\n\t\t</Router>\n\t)\n}\n\n${\n\tJSON.parse(process.env.STRICT_MODE || \"true\")\n\t\t? `ReactDOM.${JSON.parse(process.env.RENDER || \"false\") ? \"render\" : \"hydrate\"}(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\"),\n)`\n\t\t: `ReactDOM.${JSON.parse(process.env.RENDER || \"false\") ? \"render\" : \"hydrate\"}(\n\t<App />,\n\tdocument.getElementById(\"root\"),\n)`\n}\n`\n}\n\n// ${\n// \tJSON.parse(process.env.STRICT_MODE || \"true\")\n// \t\t? `ReactDOM.${JSON.parse(process.env.RENDER || \"false\") ? \"render\" : \"hydrate\"}(\n// \t<React.StrictMode>\n// \t\t<App />\n// \t</React.StrictMode>,\n// \tdocument.getElementById(\"root\"),\n// )`\n// \t\t: `ReactDOM.${JSON.parse(process.env.RENDER || \"false\") ? \"render\" : \"hydrate\"}(\n// \t<App />,\n// \tdocument.getElementById(\"root\"),\n// )`\n// }\n\nconst cmd_export: types.cmd_export = async runtime => {\n\tawait runServerGuards(runtime.directories)\n\tconst data = await fs.promises.readFile(p.join(runtime.directories.publicDir, \"index.html\"))\n\truntime.document = data.toString()\n\truntime.pages = await parsePages(runtime.directories)\n\n\tconst router = await resolveServerRouter(runtime)\n\n\t// // TODO: Cache the router for renderAppSource?\n\t// console.log(router)\n\n\tconst appSource = await renderAppSource(runtime, router)\n\tconsole.log(appSource)\n\n\t// const appSourcePath = p.join(runtime.directoryConfiguration.cacheDir, \"app.js\")\n\t// await fs.promises.writeFile(appSourcePath, appSource)\n\t//\n\t// // Generate paths for esbuild:\n\t// const entryPoints = [appSourcePath]\n\t// const outfile = entryPoints[0]!.replace(\n\t// \tnew RegExp(\"^\" + runtime.directoryConfiguration.cacheDir.replace(\"/\", \"\\\\/\")),\n\t// \truntime.directoryConfiguration.exportDir,\n\t// )\n\t//\n\t// await esbuild.build({\n\t// \tbundle: true,\n\t// \tdefine: {\n\t// \t\t__DEV__: process.env.__DEV__!,\n\t// \t\t\"process.env.NODE_ENV\": JSON.stringify(process.env.NODE_ENV),\n\t// \t},\n\t// \tentryPoints,\n\t// \tformat: \"iife\", // DOM\n\t// \tinject: [\"scripts/react-shim.js\"],\n\t// \tloader: { \".js\": \"jsx\" },\n\t// \tlogLevel: \"silent\", // TODO\n\t// \tminify: true,\n\t// \toutfile,\n\t// \t// TODO: We should probably only need to resolve plugins once.\n\t// \t// plugins: [...configs.retro.plugins],\n\t// })\n\t// // TODO: Handle warnings, error, and hints.\n}\n\nexport default cmd_export\n\n// ;(async () => {\n// \ttry {\n// \t\tawait run(require(\"../__cache__/runtime.json\"))\n// \t} catch (error) {\n// \t\tconsole.error(error.stack)\n// \t}\n// })()\n", "import * as esbuild from \"esbuild\"\n\nimport chalk from \"chalk\"\n\nexport function testObject(value: unknown): boolean {\n\treturn typeof value === \"object\" && value !== null && !Array.isArray(value)\n}\n\nexport function testArray(value: unknown): boolean {\n\treturn typeof value === \"object\" && value !== null && Array.isArray(value)\n}\n\n// loc.file:loc.line:loc.column: msg.text\n//\n// loc.line | loc.lineText\n//            ~~~~~~~~~~~~\n//\nexport function formatMessage(msg: esbuild.Message, color: (...args: unknown[]) => void): string {\n\tconst loc = msg.location!\n\treturn `${loc.file}:${loc.line}:${loc.column}: ${msg.text}\n\n\t${loc.line} ${chalk.gray(\"|\")} ${loc.lineText}\n\t${\" \".repeat(String(loc.line).length)} ${chalk.gray(\"|\")} ${\" \".repeat(loc.column)}${color(\"~\".repeat(loc.length))}`\n}\n", "import * as fs from \"fs\"\nimport * as log from \"../lib/log\"\nimport * as p from \"path\"\nimport * as types from \"./types\"\n\nimport chalk from \"chalk\"\n\n// prettier-ignore\ninterface ParsedPath {\n\tsrc:      string // e.g. \"path/to/basename.ext\"\n\tbasename: string // e.g. \"basename.ext\"\n\tname:     string // e.g. \"basename\"\n\text:      string // e.g. \".ext\"\n}\n\n// prettier-ignore\nconst supported: { [key: string]: boolean } = {\n\t\".js\":  true,\n\t\".jsx\": true,\n\t\".ts\":  true,\n\t\".tsx\": true,\n\t\".md\":  true,\n\t\".mdx\": true,\n}\n\n// parsePath parses path metadata so that syntax functions don\u2019t need to\n// re-parse path metadata.\nfunction parsePath(path: string): ParsedPath {\n\tconst basename = p.basename(path)\n\tconst ext = p.extname(path)\n\tconst name = basename.slice(0, -ext.length)\n\treturn { src: path, basename, name, ext }\n}\n\n// src/pages/index.js -> __export__/index.html\n//\n// TODO: Write tests.\nfunction dst(directories: types.DirConfiguration, path: ParsedPath): string {\n\tconst syntax = p.join(directories.exportDir, path.src.slice(directories.srcPagesDir.length))\n\treturn syntax.slice(0, -path.ext.length) + \".html\"\n}\n\n// \"src/pages/component.js\"          -> \"PageComponent\"\n// \"src/pages/nested/component.js\"   -> \"PageNestedComponent\"\n// \"src/pages/[component].js\"        -> \"DynamicPageComponent\"\n// \"src/pages/nested/[component].js\" -> \"DynamicPageNestedComponent\"\n//\n// TODO: Write tests.\nfunction toComponentSyntax(\n\tdirectories: types.DirConfiguration,\n\tparsed: ParsedPath,\n\t{ dynamic }: { dynamic: boolean },\n): string {\n\tlet path = toPathSyntax(directories, parsed)\n\tif (dynamic) {\n\t\t// Remove \"[\" and \"]\":\n\t\tpath = path.replace(dynamicRegex, \"$1$3\")\n\t}\n\tlet syntax = \"\"\n\tfor (const part of path.split(p.sep)) {\n\t\tif (!part.length) continue\n\t\tsyntax += part[0]!.toUpperCase() + part.slice(1)\n\t}\n\tsyntax = syntax || \"Index\"\n\treturn (dynamic ? \"DynamicPage\" : \"Page\") + syntax[0]!.toUpperCase() + syntax.slice(1)\n}\n\n// \"src/pages/index.js\"       -> \"/\"\n// \"src/pages/hello-world.js\" -> \"/hello-world\"\n//\n// TODO: Write tests.\nfunction toPathSyntax(directories: types.DirConfiguration, parsed: ParsedPath): string {\n\tconst syntax = parsed.src.slice(directories.srcPagesDir.length, -parsed.ext.length)\n\tif (syntax.endsWith(\"/index\")) {\n\t\treturn syntax.slice(0, -\"index\".length)\n\t}\n\treturn syntax\n}\n\n// TODO: Write tests.\nfunction createStaticPageMeta(directories: types.DirConfiguration, parsed: ParsedPath): types.StaticPageMeta {\n\tconst component: types.StaticPageMeta = {\n\t\ttype: \"static\",\n\t\tsrc: parsed.src,\n\t\tdst: dst(directories, parsed),\n\t\tpath: toPathSyntax(directories, parsed),\n\t\tcomponent: toComponentSyntax(directories, parsed, { dynamic: false }),\n\t}\n\treturn component\n}\n\n// TODO: Write tests.\nfunction createDynamicPageMeta(directories: types.DirConfiguration, parsed: ParsedPath): types.DynamicPageMeta {\n\tconst component: types.DynamicPageMeta = {\n\t\ttype: \"dynamic\",\n\t\tsrc: parsed.src,\n\t\tcomponent: toComponentSyntax(directories, parsed, { dynamic: true }),\n\t}\n\treturn component\n}\n\n// Matches:\n//\n// - $1 -> \"/\"\n// - $2 -> \"[\"\n// - $3 -> ...\n// - $4 -> \"]\"\n//\n// TODO: Write tests.\nconst dynamicRegex = /(\\/)(\\[)([a-zA-Z0-9\\-\\.\\_\\~\\:\\/\\?\\#\\[\\]\\@\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=]+)(\\])/\n\nfunction parsePage(directories: types.DirConfiguration, parsed: ParsedPath): types.PageMeta {\n\tconst path = toPathSyntax(directories, parsed)\n\tif (dynamicRegex.test(path)) {\n\t\treturn createDynamicPageMeta(directories, parsed)\n\t}\n\treturn createStaticPageMeta(directories, parsed)\n}\n\nasync function readdirAll(src: string): Promise<ParsedPath[]> {\n\tconst arr: ParsedPath[] = []\n\tasync function recurse(src: string): Promise<void> {\n\t\tconst ls = await fs.promises.readdir(src)\n\t\tfor (const each of ls) {\n\t\t\tconst path = p.join(src, each)\n\t\t\tif ((await fs.promises.stat(path)).isDirectory()) {\n\t\t\t\tarr.push(parsePath(path))\n\t\t\t\tawait recurse(path)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tarr.push(parsePath(path))\n\t\t}\n\t}\n\tawait recurse(src)\n\treturn arr\n}\n\n// testURICharacter tests whether a character matches URI reserved or unreserved\n// characters based on RFC 3986.\nfunction testURICharacter(char: string): boolean {\n\t// prettier-ignore\n\tif ((char >= \"a\" && char <= \"z\") || // ALPHA LOWER\n\t\t\t(char >= \"A\" && char <= \"Z\") || // ALPHA LOWER\n\t\t\t(char >= \"0\" && char <= \"9\")) { // DIGIT\n\t\treturn true\n\t}\n\t// https://tools.ietf.org/html/rfc3986#section-2.3\n\tswitch (char) {\n\t\tcase \"-\":\n\t\tcase \".\":\n\t\tcase \"_\":\n\t\tcase \"~\":\n\t\t\treturn true\n\t}\n\t// https://tools.ietf.org/html/rfc3986#section-2.2\n\tswitch (char) {\n\t\tcase \":\":\n\t\tcase \"/\":\n\t\tcase \"?\":\n\t\tcase \"#\":\n\t\tcase \"[\":\n\t\tcase \"]\":\n\t\tcase \"@\":\n\t\tcase \"!\":\n\t\tcase \"$\":\n\t\tcase \"&\":\n\t\tcase \"'\":\n\t\tcase \"(\":\n\t\tcase \")\":\n\t\tcase \"*\":\n\t\tcase \"+\":\n\t\tcase \",\":\n\t\tcase \";\":\n\t\tcase \"=\":\n\t\t\treturn true\n\t}\n\treturn false\n}\n\nexport default async function parsePages(directories: types.DirConfiguration): Promise<types.PageMeta[]> {\n\tconst arr = await readdirAll(directories.srcPagesDir)\n\n\t// Step over:\n\t//\n\t// - \"_component\"\n\t// - \"$component\"\n\t// - \"component_\"\n\t// - \"component$\"\n\t//\n\t// TODO: Add support for \"layout\" here?\n\tconst arr2 = arr.filter(path => {\n\t\tif (path.name.startsWith(\"_\") || path.name.startsWith(\"$\")) {\n\t\t\treturn false\n\t\t} else if (path.name.endsWith(\"_\") || path.name.endsWith(\"$\")) {\n\t\t\treturn false\n\t\t}\n\t\treturn supported[path.ext] === true\n\t})\n\n\tconst badSrcs: string[] = []\n\tfor (const { src } of arr2) {\n\t\tfor (let x = 0; x < src.length; x++) {\n\t\t\tif (!testURICharacter(src[x]!)) {\n\t\t\t\tbadSrcs.push(src)\n\t\t\t}\n\t\t}\n\t}\n\n\tif (badSrcs.length > 0) {\n\t\tlog.error(`These pages use non-URI characters:\n\n${badSrcs.map(each => \"- \" + each).join(\"\\n\")}\n\nURI characters are described by RFC 3986:\n\n2.2. Unreserved Characters\n\n\tALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n\n2.3. Reserved Characters\n\n\tgen-delims = \":\" / \"/\" / \"?\" / \"#\" / \"[\" / \"]\" /\n\tsub-delims = \"@\" / \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n\t           / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n\n${chalk.underline(\"https://tools.ietf.org/html/rfc3986\")}`)\n\t}\n\n\tconst pages: types.PageMeta[] = []\n\tfor (const parsed of arr2) {\n\t\tpages.push(parsePage(directories, parsed))\n\t}\n\treturn pages\n}\n", "import * as fs from \"fs\"\nimport * as log from \"../lib/log\"\nimport * as p from \"path\"\nimport * as types from \"./types\"\n\n// runServerGuards tests for the presence of directories and public/index.html.\nexport default async function runServerGuards(dirConfig: types.DirConfiguration): Promise<void> {\n\tconst dirs = Object.entries(dirConfig).map(([_, dir]) => dir)\n\n\t// Guards directories:\n\tfor (const dir of dirs) {\n\t\ttry {\n\t\t\tawait fs.promises.stat(dir)\n\t\t} catch (_) {\n\t\t\tfs.promises.mkdir(dir, { recursive: true })\n\t\t}\n\t}\n\n\t// Guards public/index.html:\n\tconst path = p.join(dirConfig.publicDir, \"index.html\")\n\ttry {\n\t\tconst data = await fs.promises.readFile(path)\n\t\tconst text = data.toString()\n\t\tif (!text.includes(\"%head\")) {\n\t\t\tlog.error(`${path}: Add '%head%' somewhere to '<head>'.\n\nFor example:\n\n...\n<head>\n\t<meta charset=\"utf-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\t%head%\n</head>\n...`)\n\t\t} else if (!text.includes(\"%page\")) {\n\t\t\tlog.error(`${path}: Add '%page%' somewhere to '<body>'.\n\nFor example:\n\n...\n<body>\n\t%page%\n</body>\n...`)\n\t\t}\n\t} catch (_) {\n\t\tawait fs.promises.writeFile(\n\t\t\tpath,\n\t\t\t`<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\t\t%head%\n\t</head>\n\t<body>\n\t\t%page%\n\t</body>\n</html>\n`,\n\t\t)\n\t}\n}\n", "import * as esbuild from \"esbuild\"\nimport * as fs from \"fs\"\nimport * as http from \"http\"\nimport * as log from \"../lib/log\"\nimport * as p from \"path\"\nimport * as types from \"./types\"\n\nimport chalk from \"chalk\"\nimport logRequest from \"./logRequest\"\n\n// spaify converts a URL for SPA-mode.\nfunction spaify(_: string): string {\n\treturn \"/\"\n}\n\n// ssgify converts a URL for SSG-mode.\nfunction ssgify(url: string): string {\n\tif (url.endsWith(\"/\")) return url + \"index.html\"\n\tif (p.extname(url) === \"\") return url + \".html\"\n\treturn url\n}\n\n// This implementation is roughly based on:\n//\n// - https://esbuild.github.io/api/#customizing-server-behavior\n// - https://github.com/evanw/esbuild/issues/858#issuecomment-782814216\n//\nconst serve: types.cmd_serve = async runtime => {\n\ttry {\n\t\tawait fs.promises.stat(\"__export__\")\n\t} catch {\n\t\tlog.error(\n\t\t\t`It looks like you\u2019re trying to run 'retro serve' before 'retro export'. Try 'retro export && retro serve'.`,\n\t\t)\n\t}\n\n\tsetTimeout(() => {\n\t\tlog.ok(`${chalk.underline(`http://localhost:${runtime.command.port}`)}`)\n\t}, 25)\n\n\t// prettier-ignore\n\tconst result = await esbuild.serve({\n\t\tservedir: runtime.directories.exportDir,\n\t\tonRequest: (args: esbuild.ServeOnRequestArgs) => logRequest(args),\n\t}, {})\n\n\tlet transformURL = ssgify\n\tif (runtime.command.mode === \"spa\") {\n\t\ttransformURL = spaify\n\t}\n\n\tconst proxySrv = http.createServer((req, res) => {\n\t\tconst options = {\n\t\t\thostname: result.host,\n\t\t\tport: result.port,\n\t\t\tpath: transformURL(req.url!),\n\t\t\tmethod: req.method,\n\t\t\theaders: req.headers,\n\t\t}\n\t\tconst proxyReq = http.request(options, proxyRes => {\n\t\t\t// Bad request:\n\t\t\tif (proxyRes.statusCode === 404) {\n\t\t\t\tres.writeHead(404, { \"Content-Type\": \"text/plain\" })\n\t\t\t\tres.end(\"404 - Not Found\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tres.writeHead(proxyRes.statusCode!, proxyRes.headers)\n\t\t\tproxyRes.pipe(res, { end: true })\n\t\t})\n\t\treq.pipe(proxyReq, { end: true })\n\t})\n\tproxySrv.listen(runtime.command.port)\n}\n\nexport default serve\n", "import * as esbuild from \"esbuild\"\n\nimport chalk from \"chalk\"\n\ninterface TimeInfo {\n\thh: string // e.g. \"03\"\n\tmm: string // e.g. \"04\"\n\tss: string // e.g. \"05\"\n\tam: string // e.g. \"AM\"\n\tms: string // e.g. \"000\"\n}\n\nfunction getTimeInfo(): TimeInfo {\n\tconst date = new Date()\n\tconst hh = String(date.getHours() % 12 || 12).padStart(2, \"0\")\n\tconst mm = String(date.getMinutes()).padStart(2, \"0\")\n\tconst ss = String(date.getSeconds()).padStart(2, \"0\")\n\tconst am = date.getHours() < 12 ? \"AM\" : \"PM\"\n\tconst ms = String(date.getMilliseconds()).slice(0, 3).padStart(3, \"0\")\n\treturn { hh, mm, ss, am, ms }\n}\n\nexport default function logRequest(args: esbuild.ServeOnRequestArgs): void {\n\tconst { hh, mm, ss, am, ms } = getTimeInfo()\n\n\tconst ok = args.status >= 200 && args.status < 300\n\n\tlet color = (...args: unknown[]): string => args.join(\" \")\n\tif (!ok) {\n\t\tcolor = (...args: unknown[]): string => chalk.red(args.join(\" \"))\n\t}\n\n\tconst format = `${\" \".repeat(2)}03:04:05.000 AM  ${args.method} ${args.path} - 200 (0ms)`\n\tconst result = format\n\t\t.replace(\"03:04:05.000 AM\", chalk.gray(`${hh}:${mm}:${ss}.${ms} ${am}`))\n\t\t.replace(`${args.method} ${args.path}`, color(args.method, args.path))\n\t\t.replace(\" - \", \" \" + chalk.gray(\"-\" + \"-\".repeat(Math.max(0, 65 - format.length))) + \" \")\n\t\t.replace(\"200\", color(args.status))\n\t\t.replace(\"(0ms)\", chalk.gray(`(${args.timeInMS}ms)`))\n\n\tlet log = (...args: unknown[]): void => console.log(...args)\n\tif (!ok) {\n\t\tlog = (...args: unknown[]): void => console.error(...args)\n\t}\n\tlog(result)\n}\n"],
  "mappings": "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",
  "names": []
}
